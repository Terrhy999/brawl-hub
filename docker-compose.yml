services:
  frontend:
    container_name: "frontend"
    build:
      context: ./frontend
      args:
        - BUILD_API_URL=http://192.168.0.242:3030
    ports:
      - "3000:3000"
    environment:
      INTERNAL_API_URL: http://server:3030
    depends_on:
      server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    container_name: "server"
    build:
      context: ./server
      args:
        DATABASE_URL: ${DATABASE_URL}
    environment:
      DATABASE_URL: ${DATABASE_URL}
    ports:
      - "3030:3030"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3030/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15
    container_name: "database"
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: ${PGPASSWORD}
    volumes:
      - brawlhub_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 5

  adminer:
    image: adminer
    container_name: "adminer"
    restart: always
    ports:
      - 8080:8080

volumes:
  brawlhub_data:
